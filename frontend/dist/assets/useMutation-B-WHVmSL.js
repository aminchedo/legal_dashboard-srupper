var x=i=>{throw TypeError(i)};var g=(i,t,s)=>t.has(i)||x("Cannot "+s);var e=(i,t,s)=>(g(i,t,"read from private field"),s?s.call(i):t.get(i)),b=(i,t,s)=>t.has(i)?x("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),p=(i,t,s,r)=>(g(i,t,"write to private field"),r?r.call(i,s):t.set(i,s),s),f=(i,t,s)=>(g(i,t,"access private method"),s);import{S as k,s as U,k as R,n as K,c as q,l as m,m as A,o as L}from"./index-DFIyXlnM.js";function P(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}var h,l,o,u,n,C,M,w,j=(w=class extends k{constructor(t,s){super();b(this,n);b(this,h);b(this,l);b(this,o);b(this,u);p(this,h,t),this.setOptions(s),this.bindMethods(),f(this,n,C).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=e(this,h).defaultMutationOptions(t),U(this.options,s)||e(this,h).getMutationCache().notify({type:"observerOptionsUpdated",mutation:e(this,o),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&R(s.mutationKey)!==R(this.options.mutationKey)?this.reset():((r=e(this,o))==null?void 0:r.state.status)==="pending"&&e(this,o).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=e(this,o))==null||t.removeObserver(this)}onMutationUpdate(t){f(this,n,C).call(this),f(this,n,M).call(this,t)}getCurrentResult(){return e(this,l)}reset(){var t;(t=e(this,o))==null||t.removeObserver(this),p(this,o,void 0),f(this,n,C).call(this),f(this,n,M).call(this)}mutate(t,s){var r;return p(this,u,s),(r=e(this,o))==null||r.removeObserver(this),p(this,o,e(this,h).getMutationCache().build(e(this,h),this.options)),e(this,o).addObserver(this),e(this,o).execute(t)}},h=new WeakMap,l=new WeakMap,o=new WeakMap,u=new WeakMap,n=new WeakSet,C=function(){var s;const t=((s=e(this,o))==null?void 0:s.state)??P();p(this,l,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},M=function(t){K.batch(()=>{var s,r,a,v,d,y,S,E;if(e(this,u)&&this.hasListeners()){const c=e(this,l).variables,O=e(this,l).context;(t==null?void 0:t.type)==="success"?((r=(s=e(this,u)).onSuccess)==null||r.call(s,t.data,c,O),(v=(a=e(this,u)).onSettled)==null||v.call(a,t.data,null,c,O)):(t==null?void 0:t.type)==="error"&&((y=(d=e(this,u)).onError)==null||y.call(d,t.error,c,O),(E=(S=e(this,u)).onSettled)==null||E.call(S,void 0,t.error,c,O))}this.listeners.forEach(c=>{c(e(this,l))})})},w);function Q(i,t){const s=q(),[r]=m.useState(()=>new j(s,i));m.useEffect(()=>{r.setOptions(i)},[r,i]);const a=m.useSyncExternalStore(m.useCallback(d=>r.subscribe(K.batchCalls(d)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),v=m.useCallback((d,y)=>{r.mutate(d,y).catch(A)},[r]);if(a.error&&L(r.options.throwOnError,[a.error]))throw a.error;return{...a,mutate:v,mutateAsync:a.mutate}}export{Q as u};
