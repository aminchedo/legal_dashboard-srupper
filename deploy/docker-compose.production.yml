version: '3.8'

services:
  # Legal Dashboard Application
  legal-dashboard:
    image: 24498743/legal-dashboard:latest
    container_name: legal-dashboard-app
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - DATABASE_URL=postgresql://legal_user:legal_password@postgres:5432/legal_dashboard
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - legal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - app-logs:/app/logs
      - app-data:/app/data

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: legal-dashboard-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=legal_dashboard
      - POSTGRES_USER=legal_user
      - POSTGRES_PASSWORD=legal_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - legal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U legal_user -d legal_dashboard"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: legal-dashboard-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis-data:/data
    networks:
      - legal-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: legal-dashboard-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - legal-dashboard
    networks:
      - legal-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  legal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
  app-data:
    driver: local
  nginx-logs:
    driver: local