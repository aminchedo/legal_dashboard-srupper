import { z } from "zod";
export type SandboxMetaData = z.infer<typeof Sandbox>;
export declare const Sandbox: z.ZodObject<{
    id: z.ZodString;
    memory: z.ZodNumber;
    vcpus: z.ZodNumber;
    region: z.ZodString;
    runtime: z.ZodString;
    timeout: z.ZodNumber;
    status: z.ZodEnum<["pending", "running", "stopping", "stopped", "failed"]>;
    requestedAt: z.ZodNumber;
    startedAt: z.ZodOptional<z.ZodNumber>;
    requestedStopAt: z.ZodOptional<z.ZodNumber>;
    stoppedAt: z.ZodOptional<z.ZodNumber>;
    duration: z.ZodOptional<z.ZodNumber>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    region: string;
    status: "pending" | "running" | "stopping" | "stopped" | "failed";
    id: string;
    memory: number;
    vcpus: number;
    runtime: string;
    timeout: number;
    requestedAt: number;
    createdAt: number;
    updatedAt: number;
    duration?: number | undefined;
    startedAt?: number | undefined;
    requestedStopAt?: number | undefined;
    stoppedAt?: number | undefined;
}, {
    region: string;
    status: "pending" | "running" | "stopping" | "stopped" | "failed";
    id: string;
    memory: number;
    vcpus: number;
    runtime: string;
    timeout: number;
    requestedAt: number;
    createdAt: number;
    updatedAt: number;
    duration?: number | undefined;
    startedAt?: number | undefined;
    requestedStopAt?: number | undefined;
    stoppedAt?: number | undefined;
}>;
export type SandboxRouteData = z.infer<typeof SandboxRoute>;
export declare const SandboxRoute: z.ZodObject<{
    url: z.ZodString;
    subdomain: z.ZodString;
    port: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    url: string;
    subdomain: string;
    port: number;
}, {
    url: string;
    subdomain: string;
    port: number;
}>;
export type CommandData = z.infer<typeof Command>;
export declare const Command: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    args: z.ZodArray<z.ZodString, "many">;
    cwd: z.ZodString;
    sandboxId: z.ZodString;
    exitCode: z.ZodNullable<z.ZodNumber>;
    startedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name: string;
    args: string[];
    id: string;
    startedAt: number;
    cwd: string;
    sandboxId: string;
    exitCode: number | null;
}, {
    name: string;
    args: string[];
    id: string;
    startedAt: number;
    cwd: string;
    sandboxId: string;
    exitCode: number | null;
}>;
export declare const SandboxResponse: z.ZodObject<{
    sandbox: z.ZodObject<{
        id: z.ZodString;
        memory: z.ZodNumber;
        vcpus: z.ZodNumber;
        region: z.ZodString;
        runtime: z.ZodString;
        timeout: z.ZodNumber;
        status: z.ZodEnum<["pending", "running", "stopping", "stopped", "failed"]>;
        requestedAt: z.ZodNumber;
        startedAt: z.ZodOptional<z.ZodNumber>;
        requestedStopAt: z.ZodOptional<z.ZodNumber>;
        stoppedAt: z.ZodOptional<z.ZodNumber>;
        duration: z.ZodOptional<z.ZodNumber>;
        createdAt: z.ZodNumber;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    }, {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    sandbox: {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    };
}, {
    sandbox: {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    };
}>;
export declare const SandboxAndRoutesResponse: z.ZodObject<{
    sandbox: z.ZodObject<{
        id: z.ZodString;
        memory: z.ZodNumber;
        vcpus: z.ZodNumber;
        region: z.ZodString;
        runtime: z.ZodString;
        timeout: z.ZodNumber;
        status: z.ZodEnum<["pending", "running", "stopping", "stopped", "failed"]>;
        requestedAt: z.ZodNumber;
        startedAt: z.ZodOptional<z.ZodNumber>;
        requestedStopAt: z.ZodOptional<z.ZodNumber>;
        stoppedAt: z.ZodOptional<z.ZodNumber>;
        duration: z.ZodOptional<z.ZodNumber>;
        createdAt: z.ZodNumber;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    }, {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    }>;
} & {
    routes: z.ZodArray<z.ZodObject<{
        url: z.ZodString;
        subdomain: z.ZodString;
        port: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        url: string;
        subdomain: string;
        port: number;
    }, {
        url: string;
        subdomain: string;
        port: number;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    sandbox: {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    };
    routes: {
        url: string;
        subdomain: string;
        port: number;
    }[];
}, {
    sandbox: {
        region: string;
        status: "pending" | "running" | "stopping" | "stopped" | "failed";
        id: string;
        memory: number;
        vcpus: number;
        runtime: string;
        timeout: number;
        requestedAt: number;
        createdAt: number;
        updatedAt: number;
        duration?: number | undefined;
        startedAt?: number | undefined;
        requestedStopAt?: number | undefined;
        stoppedAt?: number | undefined;
    };
    routes: {
        url: string;
        subdomain: string;
        port: number;
    }[];
}>;
export declare const CommandResponse: z.ZodObject<{
    command: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        args: z.ZodArray<z.ZodString, "many">;
        cwd: z.ZodString;
        sandboxId: z.ZodString;
        exitCode: z.ZodNullable<z.ZodNumber>;
        startedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number | null;
    }, {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number | null;
    }>;
}, "strip", z.ZodTypeAny, {
    command: {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number | null;
    };
}, {
    command: {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number | null;
    };
}>;
export declare const CommandFinishedResponse: z.ZodObject<{
    command: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        args: z.ZodArray<z.ZodString, "many">;
        cwd: z.ZodString;
        sandboxId: z.ZodString;
        startedAt: z.ZodNumber;
    } & {
        exitCode: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number;
    }, {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number;
    }>;
}, "strip", z.ZodTypeAny, {
    command: {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number;
    };
}, {
    command: {
        name: string;
        args: string[];
        id: string;
        startedAt: number;
        cwd: string;
        sandboxId: string;
        exitCode: number;
    };
}>;
export declare const EmptyResponse: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const LogLine: z.ZodObject<{
    stream: z.ZodEnum<["stdout", "stderr"]>;
    data: z.ZodString;
}, "strip", z.ZodTypeAny, {
    stream: "stdout" | "stderr";
    data: string;
}, {
    stream: "stdout" | "stderr";
    data: string;
}>;
