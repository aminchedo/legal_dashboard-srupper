name: Docker Build and Push

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      run: |
        echo "🔐 Logging into Docker Hub with Personal Access Token..."
        echo "dckr_pat_PLACEHOLDER_TOKEN_WILL_BE_REPLACED" | docker login -u "24498743" --password-stdin
        if [ $? -eq 0 ]; then
          echo "✅ Docker Hub authentication successful!"
        else
          echo "❌ Docker Hub authentication failed!"
          exit 1
        fi

    - name: Build Multi-Platform Image
      run: |
        echo "🏗️ Building multi-platform Docker image..."
        
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        COMMIT_SHORT=${GITHUB_SHA::8}
        
        echo "📋 Building with tags:"
        echo "  - latest"
        echo "  - $TIMESTAMP"
        echo "  - $COMMIT_SHORT"
        
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t 24498743/legal-dashboard:latest \
          -t 24498743/legal-dashboard:$TIMESTAMP \
          -t 24498743/legal-dashboard:$COMMIT_SHORT \
          --push \
          .
        
        echo "✅ Multi-platform build and push completed!"
        echo "TIMESTAMP_TAG=$TIMESTAMP" >> $GITHUB_ENV
        echo "COMMIT_TAG=$COMMIT_SHORT" >> $GITHUB_ENV

    - name: Build Local Test Image
      run: |
        echo "🔨 Building local test image..."
        docker build -t test-local .
        echo "✅ Local test image ready!"

    - name: Test Container Functionality
      run: |
        echo "🧪 Testing Docker container functionality..."
        
        docker run --rm -d --name test-container -p 8080:8000 test-local
        sleep 15
        
        if docker ps | grep -q test-container; then
          echo "✅ Container is running successfully!"
          docker logs test-container --tail 10
          docker stop test-container
        else
          echo "⚠️ Container may have exited, checking logs..."
          docker logs test-container --tail 15 2>/dev/null || echo "Container exited before logging"
        fi
        
        echo "✅ Container functionality test completed!"

    - name: Verify Docker Hub Push
      run: |
        echo "🔍 Verifying Docker Hub push success..."
        
        echo "📋 Tags pushed to Docker Hub:"
        echo "  ✅ latest"
        echo "  ✅ $TIMESTAMP_TAG"
        echo "  ✅ $COMMIT_TAG"
        
        echo "📦 Repository: https://hub.docker.com/r/24498743/legal-dashboard"
        echo "✅ All images pushed successfully!"

    - name: Security Scan (Optional)
      continue-on-error: true
      run: |
        echo "🔒 Running optional security scan..."
        
        # Try to install and run trivy if available
        if command -v trivy >/dev/null 2>&1; then
          trivy image --format table 24498743/legal-dashboard:latest
          echo "✅ Security scan completed"
        else
          echo "⚠️ Trivy not available, skipping security scan"
        fi

    - name: Build Summary
      run: |
        echo "## 🚀 Legal Dashboard Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Build Success Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **Authentication**: Personal Access Token ✅" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: 24498743/legal-dashboard" >> $GITHUB_STEP_SUMMARY
        echo "- **Latest Tag**: latest" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp Tag**: $TIMESTAMP_TAG" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit Tag**: $COMMIT_TAG" >> $GITHUB_STEP_SUMMARY
        echo "- **Platforms**: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "- **Container Test**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🐳 Quick Deploy Commands:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Pull and run latest image" >> $GITHUB_STEP_SUMMARY
        echo "docker pull 24498743/legal-dashboard:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d -p 8000:8000 --name legal-dashboard 24498743/legal-dashboard:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Or run specific tags" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d -p 8000:8000 --name legal-dashboard 24498743/legal-dashboard:$TIMESTAMP_TAG" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d -p 8000:8000 --name legal-dashboard 24498743/legal-dashboard:$COMMIT_TAG" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Useful Links:" >> $GITHUB_STEP_SUMMARY
        echo "- [Docker Hub Repository](https://hub.docker.com/r/24498743/legal-dashboard)" >> $GITHUB_STEP_SUMMARY
        echo "- [GitHub Repository](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Container Management:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# View running containers" >> $GITHUB_STEP_SUMMARY
        echo "docker ps" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# View container logs" >> $GITHUB_STEP_SUMMARY
        echo "docker logs legal-dashboard" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Stop and remove container" >> $GITHUB_STEP_SUMMARY
        echo "docker stop legal-dashboard && docker rm legal-dashboard" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎉 **Build completed successfully with token authentication!**" >> $GITHUB_STEP_SUMMARY

    - name: Cleanup
      if: always()
      run: |
        echo "🧹 Performing cleanup..."
        docker system prune -f || true
        echo "✅ Cleanup completed!"