version: '3.8'

services:
  legal-dashboard:
    image: 24498743/legal-dashboard:latest
    container_name: legal-dashboard-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - TZ=UTC
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - legal_data:/app/data
      - legal_logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    networks:
      - legal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: legal-dashboard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      legal-dashboard:
        condition: service_healthy
    networks:
      - legal-network
    profiles:
      - production

  # Optional: Database (if needed in future)
  postgres:
    image: postgres:15-alpine
    container_name: legal-dashboard-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=legal_dashboard
      - POSTGRES_USER=legal_user
      - POSTGRES_PASSWORD=legal_secure_password_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - legal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U legal_user -d legal_dashboard"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - with-database

  # Optional: Redis cache (if needed)
  redis:
    image: redis:7-alpine
    container_name: legal-dashboard-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_secure_password_2025
    volumes:
      - redis_data:/data
    networks:
      - legal-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - with-cache

networks:
  legal-network:
    driver: bridge
    name: legal-dashboard-network

volumes:
  legal_data:
    name: legal-dashboard-data
  legal_logs:
    name: legal-dashboard-logs
  postgres_data:
    name: legal-dashboard-postgres
  redis_data:
    name: legal-dashboard-redis
  nginx_logs:
    name: legal-dashboard-nginx-logs